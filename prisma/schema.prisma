// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

//-------------------------------------------------
// RECIPE MODELS
//-------------------------------------------------

model Recipe {
  id                  String             @id @default(cuid())
  slug                String             @unique
  title               String
  description         String
  story               String?
  cuisine             String?
  prepTime            String
  cookTime            String
  totalTime           String
  servings            Int
  difficulty          Difficulty
  featured            Boolean            @default(false)
  published           Boolean            @default(false)
  heroImage           String?
  heroImageAlt        String?
  ingredientsImage    String?
  ingredientsImageAlt String?
  thumbnailDisplay    ThumbnailDisplay?  @default(HERO)
  authorId            String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  publishedAt         DateTime?
  ingredients         Ingredient[]
  instructions        Instruction[]
  tips                Tip[]
  nutrition           Nutrition?
  tags                Tag[]              @relation("RecipeToTag")
  reviews             Review[]

  @@index([slug])
  @@index([featured])
}

model Ingredient {
  id       String  @id @default(cuid())
  amount   String
  unit     String?
  item     String
  notes    String?
  group    String?
  order    Int
  recipe   Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String
}

model Instruction {
  id          String  @id @default(cuid())
  step        Int
  title       String?
  description String
  image       String?
  imageAlt    String?
  time        String?
  recipe      Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId    String

  @@index([recipeId, step])
}

model Tip {
  id      String @id @default(cuid())
  content String
  order   Int
  recipe  Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String
}

model Nutrition {
  id       String  @id @default(cuid())
  calories Int
  protein  String
  carbs    String
  fat      String
  fiber    String?
  sugar    String?
  sodium   String?
  recipe   Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String  @unique
}

model Tag {
  id      String   @id @default(cuid())
  name    String   @unique
  slug    String   @unique
  recipes Recipe[] @relation("RecipeToTag")
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  comment   String?
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId  String
  createdAt DateTime @default(now())

  @@index([recipeId])
}

//-------------------------------------------------
// VEHICLE MODELS
//-------------------------------------------------

model Vehicle {
  id            String            @id @default(cuid())
  slug          String            @unique
  name          String
  category      String
  heroImage     String?
  gallery       String[]
  story         String[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  modifications Modification[]
  specs         Spec[]
  blogPosts     VehicleBlogPost[]
}

model Modification {
  id        String   @id @default(cuid())
  category  String
  items     String[]
  order     Int      @default(0)
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  vehicleId String
}

model Spec {
  id        String  @id @default(cuid())
  label     String
  value     String
  order     Int     @default(0)
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  vehicleId String
}

//-------------------------------------------------
// NEW VEHICLE BLOG MODELS
//-------------------------------------------------

model VehicleBlogPost {
  id           String       @id @default(cuid())
  slug         String
  title        String
  excerpt      String?
  content      String
  heroImage    String?
  heroImageAlt String?
  published    Boolean      @default(false)
  featured     Boolean      @default(false)
  publishedAt  DateTime?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  vehicle      Vehicle      @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  vehicleId    String
  tags         VehicleTag[] @relation("VehicleBlogPostToTag")

  @@unique([vehicleId, slug])
  @@index([slug])
  @@index([vehicleId, published, publishedAt])
}

model VehicleTag {
  id    String            @id @default(cuid())
  name  String            @unique
  slug  String            @unique
  posts VehicleBlogPost[] @relation("VehicleBlogPostToTag")
}

//-------------------------------------------------
// ENUMS
//-------------------------------------------------

enum Difficulty {
  easy
  medium
  hard
}

enum ThumbnailDisplay {
  HERO
  INGREDIENTS
}